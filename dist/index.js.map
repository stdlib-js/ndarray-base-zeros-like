{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar shape2strides = require( '@stdlib/ndarray-base-shape2strides' );\nvar strides2offset = require( '@stdlib/ndarray-base-strides2offset' );\nvar buffer = require( '@stdlib/ndarray-base-buffer' );\nvar numel = require( '@stdlib/ndarray-base-numel' );\nvar getDType = require( '@stdlib/ndarray-base-dtype' );\nvar getShape = require( '@stdlib/ndarray-base-shape' );\nvar getOrder = require( '@stdlib/ndarray-base-order' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Creates a zero-filled ndarray having the same shape and data type as a provided ndarray.\n*\n* @param {ndarray} x - input array\n* @throws {TypeError} first argument must have a recognized data type\n* @returns {ndarray} ndarray\n*\n* @example\n* var zeros = require( '@stdlib/ndarray-base-zeros' );\n*\n* var x = zeros( 'float32', [ 2, 2 ], 'row-major' );\n* // returns <ndarray>\n*\n* var y = zerosLike( x );\n* // returns <ndarray>\n*\n* var sh = y.shape;\n* // returns [ 2, 2 ]\n*\n* var dt = y.dtype;\n* // returns 'float32'\n*/\nfunction zerosLike( x ) {\n\tvar ndims;\n\tvar len;\n\tvar buf;\n\tvar ord;\n\tvar sh;\n\tvar st;\n\tvar dt;\n\n\tdt = getDType( x );\n\tsh = getShape( x, true );\n\tord = getOrder( x );\n\n\tndims = sh.length;\n\tif ( ndims > 0 ) {\n\t\tlen = numel( sh );\n\t\tst = shape2strides( sh, ord );\n\t} else {\n\t\t// For 0-dimensional arrays, the buffer should contain a single element...\n\t\tlen = 1;\n\t\tst = [ 0 ];\n\t}\n\tbuf = buffer( dt, len );\n\tif ( buf === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must have a recognized data type. Value: `%s`.', dt ) );\n\t}\n\treturn new x.constructor( dt, buf, sh, st, strides2offset( sh, st ), ord );\n}\n\n\n// EXPORTS //\n\nmodule.exports = zerosLike;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a zero-filled ndarray having the same shape and data type as a provided ndarray.\n*\n* @module @stdlib/ndarray-base-zeros-like\n*\n* @example\n* var zeros = require( '@stdlib/ndarray-base-zeros' );\n* var zerosLike = require( '@stdlib/ndarray-base-zeros-like' );\n*\n* var x = zeros( 'float32', [ 2, 2 ], 'row-major' );\n* // returns <ndarray>\n*\n* var y = zerosLike( x );\n* // returns <ndarray>\n*\n* var sh = y.shape;\n* // returns [ 2, 2 ]\n*\n* var dt = y.dtype;\n* // returns 'float32'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,oCAAqC,EAC9DC,EAAiB,QAAS,qCAAsC,EAChEC,EAAS,QAAS,6BAA8B,EAChDC,EAAQ,QAAS,4BAA6B,EAC9CC,EAAW,QAAS,4BAA6B,EACjDC,EAAW,QAAS,4BAA6B,EACjDC,EAAW,QAAS,4BAA6B,EACjDC,EAAS,QAAS,uBAAwB,EA2B9C,SAASC,EAAWC,EAAI,CACvB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAgBJ,GAdAA,EAAKZ,EAAUK,CAAE,EACjBK,EAAKT,EAAUI,EAAG,EAAK,EACvBI,EAAMP,EAAUG,CAAE,EAElBC,EAAQI,EAAG,OACNJ,EAAQ,GACZC,EAAMR,EAAOW,CAAG,EAChBC,EAAKf,EAAec,EAAID,CAAI,IAG5BF,EAAM,EACNI,EAAK,CAAE,CAAE,GAEVH,EAAMV,EAAQc,EAAIL,CAAI,EACjBC,IAAQ,KACZ,MAAM,IAAI,UAAWL,EAAQ,kFAAmFS,CAAG,CAAE,EAEtH,OAAO,IAAIP,EAAE,YAAaO,EAAIJ,EAAKE,EAAIC,EAAId,EAAgBa,EAAIC,CAAG,EAAGF,CAAI,CAC1E,CAKAd,EAAO,QAAUS,IC5CjB,IAAIS,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "shape2strides", "strides2offset", "buffer", "numel", "getDType", "getShape", "getOrder", "format", "zerosLike", "x", "ndims", "len", "buf", "ord", "sh", "st", "dt", "main"]
}
